<%- include("./headerDashboard.ejs") -%>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts@3.28.3/dist/apexcharts.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.min.js"
    integrity="sha384-Rx+T1VzGupg4BHQYs2gCW9It+akI2MM/mndMCy36UVfodzcJcF0GGLxZIzObiEfa"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
  <div class="head-title">
    <div class="left">
      <h1>Dashboard</h1>
 
      <ul class="box-info d-flex flex-row">
        <li>
          <i class='bx bxs-calendar-check'></i>
          <span class="text">
            <h3><%= countPendingOrders %></h3>
            <p>Pending Orders</p>
          </span>
        </li>
        <li>
          <i class='bx bxs-group'></i>
          <span class="text">
            <h3>
              <%= userCount %>
            </h3>
            <p>Users</p>
          </span>
        </li>
        <li>
          <i class='bx bxs-dollar-circle'></i>
          <span class="text">
            <h3>â‚¹<%= totalSalesForCurrentMonth %>
            </h3>
            <p>This Month</p>
          </span>
        </li>
      </ul>
    </div>
  </div>


  <div class="container mt-4">
    <div class="row">
      <div class="col-md-6 mb-4">
        <div class="card h-100">
          <div class="card-header">
            Yearly Sales Data
          </div>
          <div class="card-body">
            <div class="dropdown">
              <a class="btn btn-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                aria-expanded="false">
                Year
              </a>
              <ul class="dropdown-menu">
                <% if(allYears){ %>
                  <% for(i in allYears){ %>
                    <li><a class="dropdown-item" href="/admin/dashboard?year=<%=allYears[i] %>">
                        <%=allYears[i] %>
                      </a></li>
                    <% } } %>
              </ul>
            </div>
            <div class="mt-3" id="chart">
              Showing sales data of the year <%=year %>
            </div>
        </div>
      </div>
    </div>
    <input type="hidden" id="myInputField" value="<%= totalAmounts %>">
    <input type="hidden" id="myInputField2" value="<%= uniqueMonthsArray %>">
    <div class="col-md-6 mb-4">
      <div class="card h-100 ">
        <div class="card-header">
          Payment Summary
        </div>
        <div class="card-body">
          <div id="payment">
            <input type="hidden" id="myInputField3" value="<%= paymentModeArray %>">
            <input type="hidden" id="myInputField4" value="<%= paymentCountArray %>">
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-md-6 mb-4">
      <div class="card h-100">
        <div class="card-header">
          Category Chart
        </div>
        <div class="card-body">
          <canvas id="myChart" style="width:100%;max-width:600px">
            <input type="hidden" id="myInputField5" value="<%= catCountArray %>">
            <input type="hidden" id="myInputField6" value="<%= namesArray %>">
          </canvas>
        </div>
      </div>
    </div>
    <div class="col-md-6 mb-4">
      <div class="card h-100">
        <div class="card-header">
          Order Search
        </div>
        <div class="card-body">
          <form action="/admin/dashboard" method="GET">
            <div class="mb-3">
              <label for="fromDate" class="form-label">From Date:</label>
              <input type="date" id="fromDate" name="fromDate" class="form-control"
                max="<%= currDate.toISOString().split('T')[0] %>" onchange="updateToDateMin()">
            </div>
            <div class="mb-3">
              <label for="toDate" class="form-label">To Date:</label>
              <input type="date" id="toDate" name="toDate" class="form-control"
                max="<%= currDate.toISOString().split('T')[0] %>">
            </div>
            
            <button type="submit" class="btn btn-primary">Search</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <div class="row mt-4">
    <div class="col-md-12">
      <div class="card">
        <div class="card-header">
          Sales Report
        </div>
        <div class="card-body">
          <button onclick="exportReportToExcel()" class="btn btn-success">Export to Excel</button>
          <button onclick="printTable()" class="btn btn-secondary">Print Table</button>
          <table id="downloadTable" class="table table-striped table-bordered">
            <thead>
              <tr>
                <th>Date</th>
                <th>Order Id</th>
                <th>Name</th>
                <th>Products</th>
                <!-- <th>Quantity</th> -->
                <th>Payment Method</th>
                <th>Amount</th>
              </tr>
            </thead>
            <tbody>
              <% if(order){ %>
                <% for(i in order){ %>
                  <% const formattedDate=order[i].date.toLocaleDateString('en-IN', { day: 'numeric', month: 'short', year: 'numeric' }); %>
                  <tr>
                    <td><%= formattedDate %></td>
                    <td><%=order[i]._id %></td>
                    <td><%=order[i].user.name %></td>
                    <td>
                      <% if (order[i].products.length > 0) { %>
                        <% for (j in order[i].products) { %>
                          <%= order[i].products[j].productId.name %>
                          <% if (j < order[i].products.length - 1) { %>
                            ,
                          <% } %>
                        <% } %>
                      <% } %>
                    </td>
                    <!-- <td><%=order[i].products.quantity%></td> -->
                    <td><%=order[i].paymentMode %></td>
                    <td><%=order[i].total %></td>
                  </tr>
                <% }} %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<%- include("./footerDashboard.ejs") -%>
  <script>
    var data = document.getElementById("myInputField").value;
    const total = data.split(',')
    var months = document.getElementById("myInputField2").value;
    const monthsArray = months.split(',');

    var options = {
      series: [{
        name: "Desktops",
        data: total
      }],
      chart: {
        height: 350,
        type: 'line',
        zoom: {
          enabled: false
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        curve: 'straight'
      },
      title: {
        text: 'Sales Trends by Month',
        align: 'left'
      },
      grid: {
        row: {
          colors: ['#f3f3f3', 'transparent'],
          opacity: 0.5
        },
      },
      xaxis: {
        categories: monthsArray,
      }
    };

    var chart = new ApexCharts(document.querySelector("#chart"), options);
    chart.render();
  </script>
  <script>

    var paymentMode = document.getElementById("myInputField3").value;
    const paymentModeArray = paymentMode.split(',');
    var paymentCount = document.getElementById("myInputField4").value;
    const paymentCountArray = paymentCount.split(",").map(item => Number(item.trim()));


    var options = {
      series: paymentCountArray,
      chart: {
        width: 380,
        type: 'pie',
      },
      labels: paymentModeArray,
      responsive: [{
        breakpoint: 480,
        options: {
          chart: {
            width: 200
          },
          legend: {
            position: 'bottom'
          }
        }
      }]
    };

    var chart = new ApexCharts(document.querySelector("#payment"), options);
    chart.render();
  </script>
  <script>
    var category = document.getElementById("myInputField6").value;
    const categoryArray = category.split(',');
    var categoryCount = document.getElementById("myInputField5").value;
    const categoryCountArray = categoryCount.split(",").map(item => Number(item.trim()));
    console.log(categoryCountArray);
    var xValues = categoryArray;
    var yValues = categoryCountArray;
    var barColors = ["red", "green", "blue", "orange", "brown"];

    new Chart("myChart", {
      type: "bar",
      data: {
        labels: xValues,
        datasets: [{
          backgroundColor: barColors,
          data: yValues
        }]
      },
      options: {
        legend: { display: false },
        title: {
          display: true,
          text: "Product sold in each category"
        }
      }
    });
  </script>

<script>
  function updateToDateMin() {
    const fromDateInput = document.getElementById('fromDate');
    const toDateInput = document.getElementById('toDate');
    
    const fromDate = new Date(fromDateInput.value);
    if (fromDate) {
      toDateInput.min = fromDate.toISOString().split('T')[0];
    }
  }
</script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.8/xlsx.full.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>



  <script>
    function exportReportToExcel() {
      // Include the SheetJS library


      // Get the table element
      const table = document.getElementById("downloadTable");
      document.getElementById("downloadTable").hidden = false

      // Convert the table to a workbook
      const workbook = XLSX.utils.table_to_book(table);

      // Convert the workbook to a binary Excel file
      const excelBinary = XLSX.write(workbook, { bookType: "xlsx", type: "binary" });

      // Create a Blob object and download the file
      const blob = new Blob([s2ab(excelBinary)], { type: "application/octet-stream" });
      const url = URL.createObjectURL(blob);
      const link = document.createElement("a");
      link.href = url;
      link.download = "salesReport.xlsx";
      link.click();

      // Utility function to convert a string to an ArrayBuffer
      function s2ab(s) {
        const buf = new ArrayBuffer(s.length);
        const view = new Uint8Array(buf);
        for (let i = 0; i < s.length; i++) {
          view[i] = s.charCodeAt(i) & 0xff;
        }
        return buf;
      }
      document.getElementById("downloadTable").hidden = true


    }

  </script>
  <script>
    function printTable() {
      var table = document.getElementById("downloadTable");
      table.hidden = false;

      var newWin = window.open('', 'Print-Window');
      newWin.document.open();

      // Add necessary CSS styles for the table
      newWin.document.write('<html><head><style>');
      newWin.document.write('table { border-collapse: collapse; width: 100%; }');
      newWin.document.write('table, th, td { border: 1px solid black; }');
      newWin.document.write('</style></head><body onload="window.print()">');

      // Write the table HTML
      newWin.document.write(table.outerHTML);

      newWin.document.write('</body></html>');
      newWin.document.close();

      setTimeout(function () { newWin.close(); }, 10);
      table.hidden = true;
    }

  </script>
  <script>
    $(document).ready(function () {
      $('#downloadTable').DataTable();
    });
  </script>